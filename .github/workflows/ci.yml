name: CI
on: [push, pull_request]
env:
  BASEDIR: https://raw.githubusercontent.com/open-contracting/standard-maintenance-scripts/main
jobs:
  build:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-18.04
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432/tcp
      rabbitmq:
        image: rabbitmq:latest
        options: >-
          --health-cmd "rabbitmqctl node_health_check"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5672/tcp
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements_dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      # Check requirements.txt contains production requirements.
      - run: pip install -r requirements.txt
      - run: ./manage.py --help
      - run: curl -s -S --retry 3 $BASEDIR/tests/install.sh | bash -
      - run: pip install -r requirements_dev.txt
      - run: curl -s -S --retry 3 $BASEDIR/tests/script.sh | bash -
      - run: pytest /tmp/test_requirements.py
      - run: coverage run --source ocdskingfisherprocess,process manage.py test --settings ocdskingfisherprocess.settings.test
        if: always()
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres?application_name=kingfisher-process
          AMQP_URL: amqp://localhost:${{ job.services.rabbitmq.ports[5672] }}
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: coveralls --service=github
