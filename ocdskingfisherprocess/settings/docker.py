import os

import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration

from .base import *  # noqa: F403,F401

"""
Django settings for ocdskingfisherprocess project.

Generated by 'django-admin startproject' using Django 3.0.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

ENV_NAME = os.getenv("ENV_NAME")
ENV_VERSION = os.getenv("ENV_VERSION")

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

if os.getenv("SENTRY_DSN", False):
    sentry_sdk.init(
        dsn=os.getenv("SENTRY_DSN"),
        integrations=[DjangoIntegration()],
        traces_sample_rate=0,  # The Sentry plan does not include Performance.
    )

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY", "sadgfdfshtwbsxsadf4")

ALLOWED_HOSTS = ["*"]

RABBITMQ = {
    "host": os.getenv("RABBIT_HOST"),
    "port": os.getenv("RABBIT_PORT"),
    "username": os.getenv("RABBIT_USERNAME"),
    "password": os.getenv("RABBIT_PASSWORD"),
}

# The schema in the older version had index names longer than 30 characters.
SILENCED_SYSTEM_CHECKS = [
    "models.E034",
]

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "standard": {
            "format": "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            "datefmt": "%d/%b/%Y %H:%M:%S",
        },
    },
    "handlers": {
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "standard",
        },
        "logfile": {
            "level": "DEBUG",
            "class": "logging.FileHandler",
            "filename": "/tmp/kp_logfile",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["console", "logfile"],
            "level": "INFO",
        },
        "django.server": {
            "handlers": ["console", "logfile"],
            "level": "INFO",
        },
        "django.db.backends": {
            "handlers": ["console", "logfile"],
            "level": "INFO",
        },
        "worker": {
            "handlers": ["console", "logfile"],
            "level": "DEBUG",
        },
        "processor": {
            "handlers": ["console", "logfile"],
            "level": "DEBUG",
        },
        "views": {
            "handlers": ["console", "logfile"],
            "level": "DEBUG",
        },
    },
}
