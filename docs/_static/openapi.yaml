openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/collections/:
    post:
      operationId: collections_create
      description: Create an original collection and any derived collections.
      tags:
      - collections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCollection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateCollection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateCollection'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  collection_id:
                    type: integer
                  upgraded_collection_id:
                    type: integer
                  compiled_collection_id:
                    type: integer
          description: ''
  /api/collections/{id}/:
    delete:
      operationId: collections_destroy
      description: Publish a message to RabbitMQ to wipe the dataset.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - collections
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '202':
          description: No response body
  /api/collections/{id}/close/:
    post:
      operationId: collections_close_create
      description: Publish a message to RabbitMQ to close a root collection and its
        derived collections, if any.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - collections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloseCollection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CloseCollection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CloseCollection'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '202':
          description: No response body
  /api/collections/{id}/metadata/:
    get:
      operationId: collections_metadata_retrieve
      description: Return the compiled collection's metadata.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - collections
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  ocid_prefix:
                    type: string
                  published_from:
                    type: string
                  published_to:
                    type: string
                  license:
                    type: string
                  publication_policy:
                    type: string
          description: ''
  /api/collections/{id}/notes/:
    get:
      operationId: collections_notes_retrieve
      description: Return the notes for the collection and its child collections.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: level
        schema:
          type: array
          items:
            type: string
            enum:
            - ERROR
            - INFO
            - WARNING
        description: Filter by message severity
        explode: true
      tags:
      - collections
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  INFO:
                    type: array
                    items:
                    - type: string
                    - type: object
                    additionalItems: false
                  ERROR:
                    type: array
                    items:
                    - type: string
                    - type: object
                    additionalItems: false
                  WARNING:
                    type: array
                    items:
                    - type: string
                    - type: object
                    additionalItems: false
          description: ''
  /api/collections/{id}/tree/:
    get:
      operationId: collections_tree_list
      description: Return the original collection and its derived collections, if
        any.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - collections
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tree'
          description: ''
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    BlankEnum:
      enum:
      - ''
    CloseCollection:
      type: object
      properties:
        reason:
          type: string
          description: The reason why the spider was closed
        stats:
          type: object
          additionalProperties: {}
          description: The crawl statistics
    CreateCollection:
      type: object
      properties:
        source_id:
          type: string
          description: The source from which the files were retrieved (the name of
            the spider if sourced from Scrapy)
        data_version:
          type: string
          description: The time at which the files were retrieved in 'YYYY-MM-DD HH:MM:SS'
            format
        sample:
          type: boolean
          description: Whether the files represent a sample from the source
        upgrade:
          type: boolean
          description: Whether to upgrade the collection to the latest OCDS version
        compile:
          type: boolean
          description: Whether to create compiled releases from the collection
        check:
          type: boolean
          description: Whether to run structural checks on the collection
        job:
          type: string
          description: The Scrapyd job ID of the Scrapy crawl
        note:
          type: string
          description: A note to add to the collection
      required:
      - data_version
      - source_id
    TransformTypeEnum:
      enum:
      - compile-releases
      - upgrade-1-0-to-1-1
      type: string
      description: "* `compile-releases` - Compile releases\n* `upgrade-1-0-to-1-1`\
        \ - Upgrade from 1.0 to 1.1 "
    Tree:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        source_id:
          type: string
          description: If sourced from Scrapy, this should be the name of the spider.
          pattern: ^([a-z]+_)*[a-z]+$
        data_version:
          type: string
          format: date-time
          description: The time at which the files were retrieved (not loaded).
        sample:
          type: boolean
          default: false
        steps: {}
        options: {}
        expected_files_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        data_type: {}
        compilation_started:
          type: boolean
        transform_type:
          oneOf:
          - $ref: '#/components/schemas/TransformTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        scrapyd_job:
          type: string
        cached_releases_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        cached_records_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        cached_compiled_releases_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        store_start_at:
          type: string
          format: date-time
          readOnly: true
        store_end_at:
          type: string
          format: date-time
          nullable: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        completed_at:
          type: string
          format: date-time
          nullable: true
        parent:
          type: integer
          nullable: true
      required:
      - data_version
      - id
      - parent
      - source_id
      - store_start_at
      - transform_type
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
